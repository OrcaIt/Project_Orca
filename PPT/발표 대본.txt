안녕하십니까 저희는 AWS 서비스를 이용한 서비스 구현을 주제로 프로젝트를 진행한 팀 Orca입니다.
내용 발표에 들어가기에 앞서서 저희의 발표가 어떻게 진행되는지 간단한 목차를 통해 보고 넘어가겠습니다.

저희의 발표는 다음과 같이 진행됩니다.

짧게 프로젝트 주제에 대해서 이야기 하고, 시연 동영상에서 어떻게 프로젝트가 완성되어 있는지 보여드리기 전에
이해를 돕기 위해 프로젝트의 내용을 설명, 이후 저희 프로젝트의 추후 방향성에 대해 이야기 하는 것으로 마무리 될 것 입니다.

앞서 말씀 드렸듯이 저희의 주제는 AWS를 이용한 서비스 구현에 중점을 두었습니다.

그래서 AWS로 어떤 것을 구현해 볼 수 있을까 하고 회의를 진행한 결과 AWS S3를 이용한 클라우드 스토리지 서비스를 구현해 보면 어떨까 싶었습니다. S3에 파일 업로드와 다운로드를 회원 가입을 통해 인가된 사용자만 가능하게 그리고 그것을 웹 환경에서 이용이 가능하게 하는 것을 목표로 프로젝트를 진행하게 되었습니다.

저희가 개발할 때 사용했던 주요 툴에 대해 말씀드리겠습니다.

저희가 중심적으로 이용했던 도구는 웹 서버를 담당할 AWS의 EC2,
웹 개발에 이용할 React, 사용자 인증을 위한 AWS Cognito,
백엔드 기능과 회원가입을 위한 UI를 제공해주는 AWS Amplify
다음 네 가지 도구를 중심으로 사용하였습니다.

다음은 저희 프로젝트의 스토리에 대해 이야기 해볼까 합니다.

저희의 시작은 S3 클라우드 스토리지 서비스를 AWS 3티어 아키텍쳐로 구현하는 걸 목표로 잡고 프로젝트를 시작하였습니다.

3티어 아키텍쳐에 대해 간단하게 말씀드리자면 web서버 was서버 db 서버를 나누어 각자 자신이 맡은 역할을 수행하는 아키텍쳐 모델입니다.

해당 모델과 같이 구축했을 때의 장점은 각자 자신이 맡은 역할만 수행하여 작업효율이 올라가는 장점이 존재합니다.

저희가 3티어 아키텍쳐를 구현했을 때의 구성도를 보여드리겠습니다.

보시는 바와 같이 저희는 하나의 VPC안에 2개의 리젼을 생성하여 Public 서브넷에 Bastion을 두고 Private 서브넷에 존재하는 웹 서버에 접근 할 수 있게 끔 설계하였고, 웹 서버는 WAS 서버와 통신이 가능하게 WAS 서버는 DB의 데이터를 Web으로 전달해주는 기능을 담당했습니다.

리젼을 두개를 사용한 이유는 로드 밸런싱을 통해 하나의 리젼이 다운되더라도 사이트는 정상적으로 작동하게끔 구축하기 위함입니다.

여기서 이제 Aws Amplify에 대해 설명을 드려야 할 것 같습니다.
 
Aws Amplify란 프론트엔드 웹 및 모바일 개발자가 AWS의 풀 스택 애플리케이션을 쉽고 빠르게 구축할 수 있도록 지원하는 도구의 집합입니다.
AWS CLI 명령을 통해 다양한 백엔드 기능들을 사용할 수 있게 하죠.

저희는 이번 프로젝트에 3티어 아키텍쳐로 구현하는 것 보다 Amplify를 사용하는 것이 비용적으로도 기술적으로 다양한 이점이 존재했기에 해당 기술을 이용하여 구현을 하기로 결정했습니다.

Amplify 서비스를 사용함으로써 WAS와 DB에서 처리할 회원 정보나 파일을 불러오는 작업을 Cognito와 Amplify Stoage 서비스를 이용하여 구현할 수 있었습니다.

어떻게 변경 되었는지 구성도를 통해 보여드리도록 하겠습니다.

이것이 저희의 변경된 구성도입니다. Amplify를 이용함으로서 비용이 많이 들어가는 DB와 Nat게이트웨이, WAS 서버를 없애면서 비용적인 측면에서 크게 절약할 수 있었습니다 3tier로 구축했을 때 한달에 80크레딧 약 10만원의 비용이 발생했던 반면, Amplify는 한달 비용은 약 만원 정도 발생하였습니다. Amplify를 이용하면서 1/10의 절약 효과를 볼 수 있었던 것이죠.

회원가입과 로그인을 위한 서비스 또한 Amplify를 Cognito의 사용자 풀과 쉽게 연동하여 진행할 수 있었습니다. 이것이 저희가 Amplify로 작업을 진행한 이유입니다.

자세한 과정은 다음 시연 동영상에서 보여드리도록 하겠습니다.

-----------------------  시연 동영상 ~

시청해주셔서 감사합니다.

마지막으로 향후 개선 및 추가 작업 사항에 대해 말씀드리면서 발표를 마치도록 하겠습니다.
 
개선 사항으로는 
우선, 사용자 별로 사용된 저장공간의 용량을 표시하고 파일 다운로드와 삭제뿐만 아니라 파일 정보에 접근이 가능하게 하는 것이 있고
추가로 사용자의 멤버쉽 가입을 통한 등급을 나누어 사용 가능한 저장 용량에 차이를 두는 것도 구현해보는 것이 목표입니다.
 
이상으로 발표를 마치겠습니다. 감사합니다.
